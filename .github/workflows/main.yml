name: Tag on version change

on:
  push:
    branches:
      - master  # 実行するブランチを指定

jobs:
  create_tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get current version from library.json
        id: get_version
        run: |
          CURRENT_VERSION=$(jq -r '.version' library.json)
          echo "Current version: $CURRENT_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_ENV

      - name: Check if version has changed in the commit
        id: check_version_change
        run: |
          # Check if there is a parent commit
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            echo "Parent commit exists."

            # Check if the version in the last commit has been modified
            if git diff --name-only HEAD^ HEAD | grep -q 'library.json'; then
              echo "library.json has been modified"
              
              # Get the version before the commit
              PREVIOUS_VERSION=$(git show HEAD^:library.json | jq -r '.version')
              echo "Previous version: $PREVIOUS_VERSION"
              
              if [ "$PREVIOUS_VERSION" != "${{ env.version }}" ]; then
                echo "Version has changed from $PREVIOUS_VERSION to ${{ env.version }}"
                echo "version_changed=true" >> $GITHUB_ENV
              else
                echo "Version has not changed."
                echo "version_changed=false" >> $GITHUB_ENV
              fi
            else
              echo "library.json was not modified."
              echo "version_changed=false" >> $GITHUB_ENV
            fi
          else
            echo "No parent commit exists, likely initial commit."
            echo "version_changed=false" >> $GITHUB_ENV
          fi

      - name: Create tag
        if: env.version_changed == 'true'
        run: |
          VERSION=${{ env.version }}
          echo "Creating tag for version $VERSION"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Tag for version $VERSION"
          git push origin "v$VERSION"
