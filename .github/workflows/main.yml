name: Tag on version change

on:
  push:
    branches:
      - master  # このアクションを実行するブランチを指定

jobs:
  create_tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python (to use jq)
        uses: actions/setup-python@v4

      - name: Check if version has changed
        id: check_version
        run: |
          # 現在のバージョンを取得
          CURRENT_VERSION=$(jq -r '.version' library.json)
          echo "Current version: $CURRENT_VERSION"
          
          # 最後のコミットで変更されたファイルを確認
          if git diff HEAD^ HEAD --quiet --exit-code -- library.json; then
            echo "No changes in library.json. Skipping tag creation."
            exit 0
          else
            echo "library.json has changed."
            # 前のバージョンと新しいバージョンを比較
            PREVIOUS_VERSION=$(git show HEAD^:library.json | jq -r '.version')
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "::set-output name=version::$CURRENT_VERSION"
            else
              echo "Version has not changed. Skipping tag creation."
              exit 0
            fi
          fi

      - name: Create tag
        if: steps.check_version.outputs.version != ''
        run: |
          VERSION=${{ steps.check_version.outputs.version }}
          echo "Creating tag for version $VERSION"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Tag for version $VERSION"
          git push origin "v$VERSION"


name: Compile Examples

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install PlatformIO
      run: |
        python -m pip install -U platformio

    - name: Compile all examples
      run: |
        for dir in examples/*; do
          if [ -d "$dir" ]; then
            echo "Building project in $dir"
            platformio ci --project-dir="$dir" --board ATmega328P
          fi
        done
